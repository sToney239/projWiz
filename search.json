[{"path":"https://stoney239.github.io/projWiz/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 projWiz authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://stoney239.github.io/projWiz/articles/projWiz.html","id":"regional-map","dir":"Articles","previous_headings":"","what":"Regional map","title":"Introduction to projWiz","text":"main purpose projWiz manually specifying regional map projection. function called proj_region(), along simplified versions like proj_equal_area(), proj_conformal(), proj_equidistant(), corresponding map projection properties preserving area, shape, distance. basic knowledge properties, can refer check map projection wiki  ’s hard find difference, right? Haha, ’s basically found making package – quite large scale, projections similar optimized parameters little difference. mentioned, proj_equal_area() pre-set parameter version proj_region(). example: generate result. run codes computer, receive message indicating “region quite small”, actually region small areas using azimuthal projections just good performance. manually specify projection proj_specify() function, using projections like Lambert Azimuthal Equal Area(“laea”): Note proj_specify() function primarily intended regional data. hemisphere world data, use proj_hemisphere() proj_world() specify projection.","code":"quick_proj_region_map = function(proj_type) {   the_proj = proj_region(spData::us_states, property = proj_type)   spData::us_states |>      st_transform(the_proj) |>      ggplot()+     geom_sf()+     theme_bw()+     labs(title = proj_type)+     theme(plot.title = element_text(hjust = 0.5)) } patchwork::wrap_plots(   list(quick_proj_region_map(\"Equalarea\"),        quick_proj_region_map(\"Conformal\"),        quick_proj_region_map(\"Equidistant\")) ) proj_region(spData::hawaii,\"Equalarea\") #> [1] \"+proj=laea +lon_0=-157.6784675 +lat_0=20.5786295 +datum=WGS84 +units=m +no_defs\" proj_equal_area(spData::hawaii) #> [1] \"+proj=laea +lon_0=-157.6784675 +lat_0=20.5786295 +datum=WGS84 +units=m +no_defs\" proj_specify(spData::hawaii, \"laea\") #> [1] \"+proj=laea +lon_0=-69767.246859 +lat_0=839846.2794754 +datum=WGS84 +units=m +no_defs\""},{"path":"https://stoney239.github.io/projWiz/articles/projWiz.html","id":"hemisphere-map","dir":"Articles","previous_headings":"","what":"Hemisphere map","title":"Introduction to projWiz","text":"hemisphere maps, can use proj_hemisphere() central point’s longitude latitude, provide object allows function calculate centroid. three main types projections hemisphere maps projWiz: “Equalarea” (Equal area), “Conformal” “Ortho” showed :","code":"quick_hemisphere_map = function(proj_type) {   the_proj = proj_hemisphere(obj = list(x = 113, y = -37), property = proj_type)   rnaturalearth::countries110 |>      st_transform(the_proj) |>      ggplot()+     geom_sf()+     theme_bw()+     labs(title = proj_type)+     theme(plot.title = element_text(hjust = 0.5)) } patchwork::wrap_plots(   list(quick_hemisphere_map(\"Equalarea\"),        quick_hemisphere_map(\"Conformal\"),        quick_hemisphere_map(\"Ortho\")) )"},{"path":"https://stoney239.github.io/projWiz/articles/projWiz.html","id":"world-map","dir":"Articles","previous_headings":"","what":"World map","title":"Introduction to projWiz","text":"world map projections, primary tasks selecting projection setting central longitude. projection selection, projWiz package contains popular world map projections stored list object called world_proj_list. utilizing auto-complete feature RStudio mainstream IDEs (typing $ list name pressing Tab key), can easily access projections. categories within world_proj_list divided two: equal_area compromise. ’re interested projections Conformal properties, also check compromise category. selecting category using $ Tab, see detailed projection properties choose . ’s advisable basic understanding projections, can refer resources like Guide Selecting Map Projections World Hemisphere Maps. made selection, can use proj_world() generate desired world map.","code":"central_longitude = -60 selected_world_proj_type = world_proj_list$compromise$round_boudnary$Natural_Earth new_world_proj = proj_world(selected_world_proj_type, central_longitude)  rnaturalearth::countries110 |>    st_break_antimeridian(central_longitude) |>    st_transform(new_world_proj) |>    ggplot() +    geom_sf() +   geom_vline(xintercept = central_longitude)+   theme_minimal()"},{"path":"https://stoney239.github.io/projWiz/articles/projWiz.html","id":"message-explaination-of-proj_region","dir":"Articles","previous_headings":"","what":"Message Explaination of proj_region()","title":"Introduction to projWiz","text":"running proj_region() proj_equal_area() related functions, messages console, tell projection selected. messages typically include following steps: threshold longitude 160 latitude 80. strong reason limits; set avoid projecting maps areas larger hemisphere, may lead errors. reason using 180 90 just leave space reduce risk errors. Additionally, projecting regions wide range abnormal; insist , use proj_hemisphere(). longest edge extent less 1000 km, function always select azimuthal projection. longest edge exceeds 1000 km, function proceed following checks. Equidistant projection, map shape checks performed. “North-south extent” often results cylindrical projections, Mercator. “East-west extent” generally leads conic projections. “Square-shaped extent” usually results azimuthal projections. region near equator poles, central latitude set equator poles. approach helps orient reader reference points. just want check zone number central longitude value area interest, use functions like check_gauss_kruger_3_deg() check_gauss_kruger_6_deg()","code":""},{"path":"https://stoney239.github.io/projWiz/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhaoyang Shi. Author, maintainer.","code":""},{"path":"https://stoney239.github.io/projWiz/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shi Z (2025). projWiz: Auto-select geospatial projection. R package version 0.2.1, https://github.com/sToney239/projWiz.","code":"@Manual{,   title = {projWiz: Auto-select geospatial projection},   author = {Zhaoyang Shi},   year = {2025},   note = {R package version 0.2.1},   url = {https://github.com/sToney239/projWiz}, }"},{"path":"https://stoney239.github.io/projWiz/index.html","id":"projwiz-","dir":"","previous_headings":"","what":"Auto-select geospatial projection","title":"Auto-select geospatial projection","text":"projWiz package inspired Projection Wizard, aiming help automatically decide geospatial projection based R geospatial objects. Please note projection generated package largely depends geographical extent provide. Therefore projection can highly customized, may suitable large-scale projects formal collaborations (official projections recommended cases). However, personal map-making seeking maintain accuracy convenience, projWiz work.","code":""},{"path":"https://stoney239.github.io/projWiz/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Auto-select geospatial projection","text":"can install development version somepackage GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"sToney239/projWiz\")"},{"path":"https://stoney239.github.io/projWiz/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Auto-select geospatial projection","text":"can quickly obtain proper projection region using following code: Messages starting ## indicate final projection selected. output PROJ4 WKT string, can used GIS packages like sf. can reproject data follows: ideal example ’s official projection Alaska, can apply method area interest. Additionally, can modify central longitude world map using proj_world function. function requires projection shorthand name (can find world_proj_list data within package), central longitude parameter.","code":"library(projWiz) (new_proj = proj_equal_area(spData::alaska)) ># ## The map extent is relatively large, choose projection considering map shape ># ## North-south extent ># ## Select Transverse cylindrical equal area projection ># [1] \"+proj=tcea +lon_0=-179.683609 +datum=WGS84 +units=m +no_defs\" sf::st_transform(spData::alaska, new_proj) ># Simple feature collection with 1 feature and 6 fields ># Geometry type: MULTIPOLYGON ># Dimension:     XY ># Bounding box:  xmin: -533012.6 ymin: 5697401 xmax: 2784099 ymax: 8226065 ># Projected CRS: +proj=tcea +lon_0=-179.683609 +datum=WGS84 +units=m +no_defs >#   GEOID   NAME REGION           AREA total_pop_10 total_pop_15 ># 1    02 Alaska   West 1718925 [km^2]       691189       733375 >#                         geometry ># 1 MULTIPOLYGON (((31820.36 57... central_longitude = -60 selected_world_proj_type = world_proj_list$compromise$round_boudnary$Natural_Earth new_world_proj = proj_world(selected_world_proj_type, central_longitude)  rnaturalearth::countries110 |>    sf::st_break_antimeridian(central_longitude) |>    sf::st_transform(new_world_proj) |>    ggplot2::ggplot() +    ggplot2::geom_sf() +   ggplot2::geom_vline(xintercept = central_longitude)+   ggplot2::theme_minimal()"},{"path":"https://stoney239.github.io/projWiz/news.html","id":null,"dir":"","previous_headings":"","what":"projWiz 0.2.1","title":"projWiz 0.2.1","text":"bug fixes documentation update # projWiz 0.2.0 remove dependence geosphere remove conic check, use extent range check instead smaller region auto azimuthal projection","code":""},{"path":"https://stoney239.github.io/projWiz/news.html","id":"projwiz-012","dir":"","previous_headings":"","what":"projWiz 0.1.2","title":"projWiz 0.2.1","text":"documentation examples update","code":""},{"path":[]},{"path":"https://stoney239.github.io/projWiz/news.html","id":"minor-improvements-and-bug-fixes","dir":"","previous_headings":"","what":"Minor improvements and bug fixes","title":"projWiz 0.2.1","text":"allow longitude latitude extent input","code":""},{"path":"https://stoney239.github.io/projWiz/reference/check_gauss_kruger_3_deg.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the 3-degree Gauss Kruger zone number and the central longitude of the input longitude range — check_gauss_kruger_3_deg","title":"Calculate the 3-degree Gauss Kruger zone number and the central longitude of the input longitude range — check_gauss_kruger_3_deg","text":"Calculate 3-degree Gauss Kruger zone number central longitude input longitude range","code":""},{"path":"https://stoney239.github.io/projWiz/reference/check_gauss_kruger_3_deg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the 3-degree Gauss Kruger zone number and the central longitude of the input longitude range — check_gauss_kruger_3_deg","text":"","code":"check_gauss_kruger_3_deg(lonmax, lonmin)"},{"path":"https://stoney239.github.io/projWiz/reference/check_gauss_kruger_3_deg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the 3-degree Gauss Kruger zone number and the central longitude of the input longitude range — check_gauss_kruger_3_deg","text":"lonmax numerical value, max longitude map extent lonmin numerical value, min longitude map extent","code":""},{"path":"https://stoney239.github.io/projWiz/reference/check_gauss_kruger_3_deg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the 3-degree Gauss Kruger zone number and the central longitude of the input longitude range — check_gauss_kruger_3_deg","text":"list name \"zone_num\" \"mid_lon\", input range fall zone, list NAs.","code":""},{"path":"https://stoney239.github.io/projWiz/reference/check_gauss_kruger_3_deg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the 3-degree Gauss Kruger zone number and the central longitude of the input longitude range — check_gauss_kruger_3_deg","text":"","code":"check_gauss_kruger_3_deg(11,12) #> $zone_num #> [1] 4 #>  #> $mid_lon #> [1] 12 #>"},{"path":"https://stoney239.github.io/projWiz/reference/check_gauss_kruger_6_deg.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the 6-degree Gauss Kruger zone number and the central longitude of the input longitude range — check_gauss_kruger_6_deg","title":"Calculate the 6-degree Gauss Kruger zone number and the central longitude of the input longitude range — check_gauss_kruger_6_deg","text":"Calculate 6-degree Gauss Kruger zone number central longitude input longitude range","code":""},{"path":"https://stoney239.github.io/projWiz/reference/check_gauss_kruger_6_deg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the 6-degree Gauss Kruger zone number and the central longitude of the input longitude range — check_gauss_kruger_6_deg","text":"","code":"check_gauss_kruger_6_deg(lonmax, lonmin)"},{"path":"https://stoney239.github.io/projWiz/reference/check_gauss_kruger_6_deg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the 6-degree Gauss Kruger zone number and the central longitude of the input longitude range — check_gauss_kruger_6_deg","text":"lonmax numerical value, max longitude map extent lonmin numerical value, min longitude map extent","code":""},{"path":"https://stoney239.github.io/projWiz/reference/check_gauss_kruger_6_deg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the 6-degree Gauss Kruger zone number and the central longitude of the input longitude range — check_gauss_kruger_6_deg","text":"list name \"zone_num\" \"mid_lon\", input range fall zone, list NAs.","code":""},{"path":"https://stoney239.github.io/projWiz/reference/check_gauss_kruger_6_deg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the 6-degree Gauss Kruger zone number and the central longitude of the input longitude range — check_gauss_kruger_6_deg","text":"","code":"check_gauss_kruger_6_deg(11,12) #> $zone_num #> [1] NA #>  #> $mid_lon #> [1] NA #>"},{"path":"https://stoney239.github.io/projWiz/reference/printEWextent.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion for regional maps with an east-west extent — printEWextent","title":"Funcion for regional maps with an east-west extent — printEWextent","text":"Funcion regional maps east-west extent","code":""},{"path":"https://stoney239.github.io/projWiz/reference/printEWextent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion for regional maps with an east-west extent — printEWextent","text":"","code":"printEWextent(property, center, latmax, latmin, dlon, datum, unit)"},{"path":"https://stoney239.github.io/projWiz/reference/printEWextent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion for regional maps with an east-west extent — printEWextent","text":"property Projection property, one \"Equalarea\", \"Conformal\" \"Equidistant\". center list numerical values named lng & lat element, median longitude latitude values latmax numerical value, max latitude map extent latmin numerical value, min latitude map extent dlon numerical value, Longitudal extent region datum string datum used coordinates (currently 'WGS84', 'ETRS89' 'NAD83' supported) unit string horizontal coordinate system units (currently 'm' 'ft' supported)","code":""},{"path":"https://stoney239.github.io/projWiz/reference/printEWextent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion for regional maps with an east-west extent — printEWextent","text":"list strings named PROJ & WKT","code":""},{"path":"https://stoney239.github.io/projWiz/reference/printNSextent.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion for regional maps with an north-south extent — printNSextent","title":"Funcion for regional maps with an north-south extent — printNSextent","text":"Funcion regional maps north-south extent","code":""},{"path":"https://stoney239.github.io/projWiz/reference/printNSextent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion for regional maps with an north-south extent — printNSextent","text":"","code":"printNSextent(property, center, latmax, latmin, datum, unit)"},{"path":"https://stoney239.github.io/projWiz/reference/printNSextent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion for regional maps with an north-south extent — printNSextent","text":"property Projection property, one \"Equalarea\", \"Conformal\" \"Equidistant\". center list numerical values named lng & lat element, median longitude latitude values latmax numerical value, max latitude map extent latmin numerical value, min latitude map extent datum string datum used coordinates (currently 'WGS84', 'ETRS89' 'NAD83' supported) unit string horizontal coordinate system units (currently 'm' 'ft' supported)","code":""},{"path":"https://stoney239.github.io/projWiz/reference/printNSextent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion for regional maps with an north-south extent — printNSextent","text":"list strings named PROJ & WKT","code":""},{"path":"https://stoney239.github.io/projWiz/reference/printSquareFormat.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion for regional maps with an square-shaped extent — printSquareFormat","title":"Funcion for regional maps with an square-shaped extent — printSquareFormat","text":"Funcion regional maps square-shaped extent","code":""},{"path":"https://stoney239.github.io/projWiz/reference/printSquareFormat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion for regional maps with an square-shaped extent — printSquareFormat","text":"","code":"printSquareFormat(property, center, latmax, latmin, datum, unit)"},{"path":"https://stoney239.github.io/projWiz/reference/printSquareFormat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion for regional maps with an square-shaped extent — printSquareFormat","text":"property Projection property, one \"Equalarea\", \"Conformal\" \"Equidistant\". center list numerical values named lng & lat element, median longitude latitude values latmax numerical value, max latitude map extent latmin numerical value, min latitude map extent datum string datum used coordinates (currently 'WGS84', 'ETRS89' 'NAD83' supported) unit string horizontal coordinate system units (currently 'm' 'ft' supported)","code":""},{"path":"https://stoney239.github.io/projWiz/reference/printSquareFormat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion for regional maps with an square-shaped extent — printSquareFormat","text":"list strings named PROJ & WKT","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_conformal.html","id":null,"dir":"Reference","previous_headings":"","what":"Projection for the area of interest with conformal projection — proj_conformal","title":"Projection for the area of interest with conformal projection — proj_conformal","text":"Auto selecting conformal projections based geological shape projection characteristics. Function show messages basis projection selected. Please note longitudinal (less 160) latitudinal (less 80) range limit. area interest larger please use proj_hemisphere() use proj_specify().","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_conformal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projection for the area of interest with conformal projection — proj_conformal","text":"","code":"proj_conformal(obj, output_type = \"proj4\", datum = \"WGS84\", unit = \"m\")"},{"path":"https://stoney239.github.io/projWiz/reference/proj_conformal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Projection for the area of interest with conformal projection — proj_conformal","text":"obj Input geo data, one : object can accepted sf::st_bbox() compute bounding box named list longitude latitude extents names \"xmin\", \"xmax\" \"ymin\" \"ymax\" output_type string expected output, either \"proj4\" \"WKT\" datum string datum used coordinates (currently 'WGS84', 'ETRS89' 'NAD83' supported) unit string horizontal coordinate system units (currently 'm' 'ft' supported)","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_conformal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Projection for the area of interest with conformal projection — proj_conformal","text":"proj4 WKT string","code":""},{"path":[]},{"path":"https://stoney239.github.io/projWiz/reference/proj_conformal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Projection for the area of interest with conformal projection — proj_conformal","text":"","code":"proj_conformal(c(xmax=112,xmin=156,ymin=6,ymax=23)) #> ## The map extent is relatively large, choose projection considering map shape #> ## East-west extent #> ## Close to equator #> ## Select Mercator projection #> [1] \"+proj=merc +lon_0=-46 +lat_ts=14.5 +datum=WGS84 +units=m +no_defs\""},{"path":"https://stoney239.github.io/projWiz/reference/proj_equal_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Projection for the area of interest with equal area projection — proj_equal_area","title":"Projection for the area of interest with equal area projection — proj_equal_area","text":"Auto selecting equal-area projections based geological shape projection characteristics. Function show messages basis projection selected. Please note longitudinal (less 160) latitudinal (less 80) range limit. area interest larger please use proj_hemisphere() use proj_specify().","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_equal_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projection for the area of interest with equal area projection — proj_equal_area","text":"","code":"proj_equal_area(obj, output_type = \"proj4\", datum = \"WGS84\", unit = \"m\")"},{"path":"https://stoney239.github.io/projWiz/reference/proj_equal_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Projection for the area of interest with equal area projection — proj_equal_area","text":"obj Input geo data, one : object can accepted sf::st_bbox() compute bounding box named list longitude latitude extents names \"xmin\", \"xmax\" \"ymin\" \"ymax\" output_type string expected output, either \"proj4\" \"WKT\" datum string datum used coordinates (currently 'WGS84', 'ETRS89' 'NAD83' supported) unit string horizontal coordinate system units (currently 'm' 'ft' supported)","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_equal_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Projection for the area of interest with equal area projection — proj_equal_area","text":"proj4 WKT string","code":""},{"path":[]},{"path":"https://stoney239.github.io/projWiz/reference/proj_equal_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Projection for the area of interest with equal area projection — proj_equal_area","text":"","code":"proj_equal_area(c(xmax=112,xmin=156,ymin=6,ymax=23)) #> ## The map extent is relatively large, choose projection considering map shape #> ## East-west extent #> ## Close to equator #> ## Select Cylindrical equal area projection #> [1] \"+proj=cea +lon_0=-46 +lat_ts=14.5 +datum=WGS84 +units=m +no_defs\""},{"path":"https://stoney239.github.io/projWiz/reference/proj_equidistant.html","id":null,"dir":"Reference","previous_headings":"","what":"Projection for the area of interest with equidistant projection — proj_equidistant","title":"Projection for the area of interest with equidistant projection — proj_equidistant","text":"Auto selecting equidistant projections based geological shape projection characteristics. Function show messages basis projection selected. Please note longitudinal (less 160) latitudinal (less 80) range limit. area interest larger please use proj_hemisphere() use proj_specify().","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_equidistant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projection for the area of interest with equidistant projection — proj_equidistant","text":"","code":"proj_equidistant(obj, output_type = \"proj4\", datum = \"WGS84\", unit = \"m\")"},{"path":"https://stoney239.github.io/projWiz/reference/proj_equidistant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Projection for the area of interest with equidistant projection — proj_equidistant","text":"obj Input geo data, one : object can accepted sf::st_bbox() compute bounding box named list longitude latitude extents names \"xmin\", \"xmax\" \"ymin\" \"ymax\" output_type string expected output, either \"proj4\" \"WKT\" datum string datum used coordinates (currently 'WGS84', 'ETRS89' 'NAD83' supported) unit string horizontal coordinate system units (currently 'm' 'ft' supported)","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_equidistant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Projection for the area of interest with equidistant projection — proj_equidistant","text":"proj4 WKT string","code":""},{"path":[]},{"path":"https://stoney239.github.io/projWiz/reference/proj_equidistant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Projection for the area of interest with equidistant projection — proj_equidistant","text":"","code":"proj_equidistant(c(xmax=112,xmin=156,ymin=6,ymax=23)) #> ## The map extent is relatively large, choose projection considering map shape #> ## Close to equator #> ## Extent is not crossing equator #> [1] \"+proj=eqc +lon_0=-46 +lat_ts=14.5 +datum=WGS84 +units=m +no_defs\""},{"path":"https://stoney239.github.io/projWiz/reference/proj_hemisphere.html","id":null,"dir":"Reference","previous_headings":"","what":"Projection for hemishpere — proj_hemisphere","title":"Projection for hemishpere — proj_hemisphere","text":"Projection hemishpere","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_hemisphere.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projection for hemishpere — proj_hemisphere","text":"","code":"proj_hemisphere(   obj,   property = \"ortho\",   output_type = \"proj4\",   datum = \"WGS84\",   unit = \"m\" )"},{"path":"https://stoney239.github.io/projWiz/reference/proj_hemisphere.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Projection for hemishpere — proj_hemisphere","text":"obj Input geo data, one : object can accepted sf::st_bbox() compute bounding box named list longitude latitude centroid names \"x\" \"y\" named list longitude latitude extents names \"xmin\", \"xmax\" \"ymin\" \"ymax\" property Projection property, one \"Equalarea\", \"Conformal\" \"ortho\", default value ortho, orthographic projection. output_type string expected output, either \"proj4\" \"WKT\" datum string datum used coordinates (currently 'WGS84', 'ETRS89' 'NAD83' supported) unit string horizontal coordinate system units (currently 'm' 'ft' supported)","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_hemisphere.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Projection for hemishpere — proj_hemisphere","text":"proj4 WKT string","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_hemisphere.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Projection for hemishpere — proj_hemisphere","text":"","code":"proj_hemisphere(c(x = 123, y = 13), \"Equalarea\") #> [1] \"+proj=laea +lon_0=123 +lat_0=13 +datum=WGS84 +units=m +no_defs\" proj_hemisphere(c(xmax=112,xmin=156,ymin=6,ymax=23), \"Conformal\") #> [1] \"+proj=ortho +lon_0=-46 +lat_0=14.5 +datum=WGS84 +units=m +no_defs\" proj_hemisphere(spData::alaska, \"ortho\") #> [1] \"+proj=ortho +lon_0=-179.683609 +lat_0=61.31005 +datum=WGS84 +units=m +no_defs\""},{"path":"https://stoney239.github.io/projWiz/reference/proj_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Projection for the area of interest with specified way of projection — proj_region","title":"Projection for the area of interest with specified way of projection — proj_region","text":"Auto selecting projections specified property based geological shape projection characteristics. Function show messages basis projection selected. Please note longitudinal (less 160) latitudinal (less 80) range limit. area interest larger please use proj_hemisphere() use proj_specify().","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projection for the area of interest with specified way of projection — proj_region","text":"","code":"proj_region(   obj,   property = \"Equalarea\",   output_type = \"proj4\",   datum = \"WGS84\",   unit = \"m\" )"},{"path":"https://stoney239.github.io/projWiz/reference/proj_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Projection for the area of interest with specified way of projection — proj_region","text":"obj Input geo data, one : object can accepted sf::st_bbox() compute bounding box named list longitude latitude extents names \"xmin\", \"xmax\" \"ymin\" \"ymax\" property Projection property, one \"Equalarea\", \"Conformal\" \"Equidistant\". output_type string expected output, either \"proj4\" \"WKT\" datum string datum used coordinates (currently 'WGS84', 'ETRS89' 'NAD83' supported) unit string horizontal coordinate system units (currently 'm' 'ft' supported)","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Projection for the area of interest with specified way of projection — proj_region","text":"proj4 WKT string","code":""},{"path":[]},{"path":"https://stoney239.github.io/projWiz/reference/proj_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Projection for the area of interest with specified way of projection — proj_region","text":"","code":"proj_region(c(xmax=112,xmin=156,ymin=6,ymax=23), \"Equalarea\") #> ## East-west extent #> ## Close to equator #> ## Select Cylindrical equal area projection #> [1] \"+proj=cea +lon_0=-46 +lat_ts=14.5 +datum=WGS84 +units=m +no_defs\""},{"path":"https://stoney239.github.io/projWiz/reference/proj_specify.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating projection by the geo-boundary and the shorthand name — proj_specify","title":"Generating projection by the geo-boundary and the shorthand name — proj_specify","text":"Generating projection geo-boundary shorthand name","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_specify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating projection by the geo-boundary and the shorthand name — proj_specify","text":"","code":"proj_specify(   obj,   prj,   output_type = \"proj4\",   datum = \"WGS84\",   unit = \"m\",   x0 = NA_real_,   k0 = NA_real_ )"},{"path":"https://stoney239.github.io/projWiz/reference/proj_specify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating projection by the geo-boundary and the shorthand name — proj_specify","text":"obj object compute bounding box , can accepted sf::st_bbox() prj string representing shorthand name desired projection output_type string expected output, either \"proj4\" \"WKT\" datum string datum used coordinates (currently 'WGS84', 'ETRS89' 'NAD83' supported) unit string horizontal coordinate system units (currently 'm' 'ft' supported) x0 numeric value specifying longitude offset k0 numeric value specifying scale parameter","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_specify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating projection by the geo-boundary and the shorthand name — proj_specify","text":"proj4 WKT string output_type specified","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_specify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generating projection by the geo-boundary and the shorthand name — proj_specify","text":"","code":"proj_specify(sf::st_bbox(c(xmin = -30,ymin = -25,xmax = 20,ymax = 5),crs = 4326), \"lcc\") #> [1] \"+proj=lcc +lon_0=-5 +lat_1=-20 +lat_2=0 +lat_0=-10 +datum=WGS84 +units=m +no_defs\""},{"path":"https://stoney239.github.io/projWiz/reference/proj_world.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a world map projection — proj_world","title":"Specify a world map projection — proj_world","text":"Specify world map projection","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_world.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a world map projection — proj_world","text":"","code":"proj_world(world_proj, lng, output_type = \"proj4\")"},{"path":"https://stoney239.github.io/projWiz/reference/proj_world.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a world map projection — proj_world","text":"world_proj string proj shorthand, extracted world_proj_list lng numerical value expected central longitude output_type string expected output, either \"proj4\" \"WKT\"","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_world.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify a world map projection — proj_world","text":"proj4 WKT string","code":""},{"path":"https://stoney239.github.io/projWiz/reference/proj_world.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a world map projection — proj_world","text":"","code":"proj_world(world_proj_list$compromise$round_boudnary$Natural_Earth, 150) #> [1] \"+proj=natearth +lon_0=150 +datum=WGS84 +units=m +no_defs\""},{"path":"https://stoney239.github.io/projWiz/reference/stringLinks.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to generate proj4 and WKT string — stringLinks","title":"Function to generate proj4 and WKT string — stringLinks","text":"Function generate proj4 WKT string","code":""},{"path":"https://stoney239.github.io/projWiz/reference/stringLinks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to generate proj4 and WKT string — stringLinks","text":"","code":"stringLinks(prj, x0, lat0, lat1, lat2, lon0, k0, datum = \"WGS84\", unit = \"m\")"},{"path":"https://stoney239.github.io/projWiz/reference/stringLinks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to generate proj4 and WKT string — stringLinks","text":"prj string representing shorthand name desired projection x0 numeric value specifying longitude offset lat0 numerical value centeral latitude lat1 numerical value standard parallel 1 lat2 numerical value standard parallel 2 lon0 numerical value centeral longitude k0 numerical value scale factor datum string datum used coordinates (currently 'WGS84', 'ETRS89' 'NAD83' supported) unit string horizontal coordinate system units (currently 'm' 'ft' supported)","code":""},{"path":"https://stoney239.github.io/projWiz/reference/stringLinks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to generate proj4 and WKT string — stringLinks","text":"list strings named PROJ & WKT","code":""},{"path":"https://stoney239.github.io/projWiz/reference/world_proj_list.html","id":null,"dir":"Reference","previous_headings":"","what":"World Map projection list — world_proj_list","title":"World Map projection list — world_proj_list","text":"World Map projection list","code":""},{"path":"https://stoney239.github.io/projWiz/reference/world_proj_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"World Map projection list — world_proj_list","text":"","code":"world_proj_list"},{"path":"https://stoney239.github.io/projWiz/reference/world_proj_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"World Map projection list — world_proj_list","text":"list popular world projections: equal_area: Projections keep area property approximately correct point_polar: Equal-area world map projections poles represented points line_polar: Equal-area world map projections poles represented lines compromise: Projections compromising shape area round_boudnary: Boundary east west curve rectangular: Boundary rectange","code":""},{"path":"https://stoney239.github.io/projWiz/reference/world_proj_list.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"World Map projection list — world_proj_list","text":"https://github.com/ProjectionWizard/projectionwizard.github.io/blob/263b9ff09128e371ee923ab57bfc1ed41bbdc4ba/outputFormat.js#L115","code":""}]
